export enum Categories {
  Player,
  CLIModule,
  MapModule,
  RaycastingModule,
  RaycastingPhotoModule,
}

export type StoreItemType = {
  id: number;
  category: Categories;
  name: string;
  description: string;
  prerequisite: string[];
  cost: number[];
  value: number[];
  acquired: number;
};

export const StoreItems: StoreItemType[] = [
  // ---------- CLIMODULE ----------
  {
    id: 0,
    category: Categories.CLIModule,
    name: "move Command",
    description: "",
    prerequisite: [],
    cost: [0],
    value: [0, 1],
    acquired: 1,
  },
  {
    id: 0,
    category: Categories.CLIModule,
    name: "turn Command",
    description: "",
    prerequisite: [],
    cost: [0],
    value: [0, 1],
    acquired: 1,
  },
  {
    id: 0,
    category: Categories.CLIModule,
    name: "integrity Command",
    description: "",
    prerequisite: [],
    cost: [100],
    value: [0, 1],
    acquired: 1,
  },
  {
    id: 0,
    category: Categories.CLIModule,
    name: "fuel Command",
    description: "",
    prerequisite: [],
    cost: [100],
    value: [0, 1],
    acquired: 1,
  },
  {
    id: 0,
    category: Categories.CLIModule,
    name: "scan Command",
    description: "",
    prerequisite: [],
    cost: [100],
    value: [0, 1],
    acquired: 1,
  },
  {
    id: 0,
    category: Categories.CLIModule,
    name: "position Command",
    description: "",
    prerequisite: [],
    cost: [100],
    value: [0, 1],
    acquired: 1,
  },
  {
    id: 0,
    category: Categories.CLIModule,
    name: "video Command",
    description: "",
    prerequisite: [],
    cost: [100],
    value: [0, 1],
    acquired: 1,
  },
  {
    id: 0,
    category: Categories.CLIModule,
    name: "capture Command",
    description: "",
    prerequisite: [],
    cost: [100],
    value: [0, 1],
    acquired: 1,
  },
  {
    id: 0,
    category: Categories.CLIModule,
    name: "gallery Command",
    description: "",
    prerequisite: [],
    cost: [100],
    value: [0, 1],
    acquired: 1,
  },
  {
    id: 0,
    category: Categories.CLIModule,
    name: "abort Command",
    description: "",
    prerequisite: [],
    cost: [0],
    value: [0, 1],
    acquired: 1,
  },
  {
    id: 0,
    category: Categories.CLIModule,
    name: "quit Command",
    description: "",
    prerequisite: [],
    cost: [0],
    value: [0, 1],
    acquired: 1,
  },
  {
    id: 0,
    category: Categories.CLIModule,
    name: "help Command",
    description: "",
    prerequisite: [],
    cost: [100],
    value: [0, 1],
    acquired: 1,
  },
  {
    id: 0,
    category: Categories.CLIModule,
    name: "Auto Complete",
    description: "",
    prerequisite: [],
    cost: [100],
    value: [0, 1],
    acquired: 0,
  },
  {
    id: 0,
    category: Categories.CLIModule,
    name: "Command History",
    description: "",
    prerequisite: [],
    cost: [100, 200, 300],
    value: [0, 1, 3, Infinity],
    acquired: 0,
  },
  {
    id: 0,
    category: Categories.CLIModule,
    name: "Text Delay",
    description: "",
    prerequisite: [],
    cost: [100, 200, 300],
    value: [100, 75, 50, 25],
    acquired: 0,
  },
  // ---------- BRUH ----------
  {
    id: 0,
    category: Categories.CLIModule,
    name: "move Command Default Option",
    description: "",
    prerequisite: [],
    cost: [100],
    value: [0, 1],
    acquired: 0,
  },
  {
    id: 0,
    category: Categories.CLIModule,
    name: "move Command backward Option",
    description: "",
    prerequisite: [],
    cost: [100],
    value: [0, 1],
    acquired: 0,
  },
  {
    id: 0,
    category: Categories.CLIModule,
    name: "Turn Command Default Option",
    description: "",
    prerequisite: [],
    cost: [100],
    value: [0, 1],
    acquired: 0,
  },
  {
    id: 0,
    category: Categories.CLIModule,
    name: "gallery Command delete Option",
    description: "",
    prerequisite: [],
    cost: [100],
    value: [0, 1],
    acquired: 0,
  },
  {
    id: 0,
    category: Categories.CLIModule,
    name: "gallery Command previous Option",
    description: "",
    prerequisite: [],
    cost: [100],
    value: [0, 1],
    acquired: 0,
  },
  // ---------- SCAN ----------
  {
    id: 0,
    category: Categories.MapModule,
    name: "scan Range",
    description: "",
    prerequisite: [],
    cost: [100],
    value: [0, 1],
    acquired: 0,
  },
  // ---------- MAP ----------
  {
    id: 0,
    category: Categories.MapModule,
    name: "Player Direction",
    description: "",
    prerequisite: [],
    cost: [100],
    value: [0, 1],
    acquired: 0,
  },
  {
    id: 0,
    category: Categories.MapModule,
    name: "video HUD",
    description: "",
    prerequisite: [],
    cost: [100],
    value: [0, 1],
    acquired: 0,
  },
  {
    id: 0,
    category: Categories.MapModule,
    name: "position HUD",
    description: "",
    prerequisite: [],
    cost: [100],
    value: [0, 1],
    acquired: 0,
  },
  {
    id: 0,
    category: Categories.MapModule,
    name: "fuel HUD",
    description: "",
    prerequisite: [],
    cost: [100],
    value: [0, 1],
    acquired: 0,
  },
  {
    id: 0,
    category: Categories.MapModule,
    name: "integrity HUD",
    description: "",
    prerequisite: [],
    cost: [100],
    value: [0, 1],
    acquired: 0,
  },
  {
    id: 0,
    category: Categories.MapModule,
    name: "scan Threat Detection",
    description: "",
    prerequisite: [],
    cost: [100],
    value: [0, 1],
    acquired: 0,
  },
  {
    id: 0,
    category: Categories.MapModule,
    name: "Center minimap on ROB-I",
    description: "",
    prerequisite: [],
    cost: [100],
    value: [0, 1],
    acquired: 0,
  },
  {
    id: 0,
    category: Categories.MapModule,
    name: "Move Map",
    description: "",
    prerequisite: [],
    cost: [100],
    value: [0, 1],
    acquired: 0,
  },
  {
    id: 0,
    category: Categories.MapModule,
    name: "Draw on Map",
    description: "",
    prerequisite: [],
    cost: [100],
    value: [0, 1],
    acquired: 0,
  },
  {
    id: 0,
    category: Categories.MapModule,
    name: "Map Zoom",
    description: "",
    prerequisite: [],
    cost: [100],
    value: [0, 1],
    acquired: 0,
  },
  {
    id: 0,
    category: Categories.MapModule,
    name: "position Command Duration",
    description: "",
    prerequisite: [],
    cost: [100, 200, 300],
    value: [100, 250, 500, Infinity],
    acquired: 0,
  },
  // ---------- VIDEO ----------
  {
    id: 0,
    category: Categories.RaycastingModule,
    name: "Video Resolution",
    description: "",
    prerequisite: [],
    cost: [100, 200, 300, 400],
    value: [10, 20, 30, 40, 50],
    acquired: 0,
  },
  {
    id: 0,
    category: Categories.RaycastingModule,
    name: "Video Flash",
    description: "",
    prerequisite: [],
    cost: [100, 200, 300, 400, 500],
    value: [0, 1, 2, 3, 4, 5],
    acquired: 0,
  },
  {
    id: 0,
    category: Categories.RaycastingModule,
    name: "Video Framerate",
    description: "",
    prerequisite: [],
    cost: [100, 200, 300, 400, 500],
    value: [5, 10, 15, 20, 25, 30],
    acquired: 0,
  },
  {
    id: 0,
    category: Categories.RaycastingModule,
    name: "Video Threat Detection",
    description: "",
    prerequisite: [],
    cost: [100],
    value: [0, 1],
    acquired: 0,
  },
  {
    id: 0,
    category: Categories.RaycastingModule,
    name: "Video Movement Commands",
    description: "",
    prerequisite: [],
    cost: [100],
    value: [0, 1],
    acquired: 0,
  },
  {
    id: 0,
    category: Categories.RaycastingModule,
    name: "Video capture Command",
    description: "",
    prerequisite: [],
    cost: [100],
    value: [0, 1],
    acquired: 0,
  },
  // ---------- CAMERA ----------
  {
    id: 0,
    category: Categories.RaycastingPhotoModule,
    name: "Photo Resolution",
    description: "",
    prerequisite: [],
    cost: [100, 200, 300, 400],
    value: [10, 20, 30, 40, 50],
    acquired: 0,
  },
  {
    id: 0,
    category: Categories.RaycastingPhotoModule,
    name: "Photo Flash",
    description: "",
    prerequisite: [],
    cost: [100, 200, 300, 400, 500],
    value: [0, 1, 2, 3, 4, 5],
    acquired: 0,
  },
  {
    id: 0,
    category: Categories.RaycastingPhotoModule,
    name: "Photo Capture Delay",
    description: "",
    prerequisite: [],
    cost: [100, 200, 300, 400, 500],
    value: [500, 400, 300, 200, 100, 0],
    acquired: 0,
  },
  {
    id: 0,
    category: Categories.RaycastingPhotoModule,
    name: "Gallery Arrow Commands",
    description: "",
    prerequisite: [],
    cost: [100],
    value: [0, 1],
    acquired: 0,
  },
  {
    id: 0,
    category: Categories.RaycastingPhotoModule,
    name: "Photo Threat Detection",
    description: "",
    prerequisite: [],
    cost: [100],
    value: [0, 1],
    acquired: 0,
  },
  // ---------- ROB-I ----------
  {
    id: 0,
    category: Categories.Player,
    name: "Move Speed",
    description: "",
    prerequisite: [],
    cost: [100, 200, 300],
    value: [10, 8, 6, 4],
    acquired: 0,
  },
  {
    id: 0,
    category: Categories.Player,
    name: "Turn Speed",
    description: "",
    prerequisite: [],
    cost: [100, 200, 300],
    value: [10, 8, 6, 4],
    acquired: 0,
  },
  {
    id: 0,
    category: Categories.Player,
    name: "Integrity Reinforcements",
    description: "",
    prerequisite: [],
    cost: [100, 200, 300],
    value: [20, 30, 40, 50],
    acquired: 0,
  },
  {
    id: 0,
    category: Categories.Player,
    name: "Fuel Capacity",
    description: "",
    prerequisite: [],
    cost: [100, 200, 300],
    value: [20, 30, 40, 50],
    acquired: 0,
  },
  {
    id: 0,
    category: Categories.Player,
    name: "Damage Detection",
    description: "",
    prerequisite: [],
    cost: [100],
    value: [0, 1, 2],
    acquired: 0,
  },
];

let bruh = false;
for (let i = 0; i < StoreItems.length; i++) {
  if (StoreItems[i].cost.length != StoreItems[i].value.length - 1)
    console.error("Cost/Value discrepancy at " + i);
  for (let j = i + 1; j < StoreItems.length - 1; j++) {
    if (StoreItems[i].id == StoreItems[j].id) {
      bruh = true;
    }
  }
}
if (bruh) console.error("bruh (there are duplicate ids on StoreItems)");

export const getCurrentUpgrade = (
  upgradeCategory: Categories,
  upgradeName: string
): number => {
  let item = StoreItems.find((item) => item.name == upgradeName);
  if (item) return item.value[item.acquired];

  console.log(Categories[upgradeCategory] + " " + upgradeName);
  return 1;
};
